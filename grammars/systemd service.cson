'scopeName': 'source.service'
'name': 'Systemd Service'
'fileTypes': [
  'service'
]
'patterns': [
  {
    'include': '#section'
  }
  {
    'include': '#comment'
  }
]
'repository':
  'boolean':
    'match': '\\b(?i:yes|no|0|1|true|false)\\b'
    'name': 'constant.language.boolean.service'
  'comment':
    'captures':
      '1':
        'name': 'comment.line.number-sign.service'
      '2':
        'name': 'punctuation.definition.comment.service'
      '3':
        'name': 'comment.line.semi-colon.service'
      '4':
        'name': 'punctuation.definition.comment.service'
    'match': '((#).*$\\n?)|((;).*$\\n?)'
  'section':
    'begin': '\\[\\s*([\\w_-]+)(?:\\s+((")(?:[^"\\\\]|\\\\["\\\\])*("))|\\.([\\w_-]+))?\\s*\\]'
    'captures':
      '1':
        'name': 'entity.name.section.service'
      '2':
        'name': 'entity.name.section.subsection.service'
      '3':
        'name': 'punctuation.definition.section.subsection.begin.service'
      '4':
        'name': 'punctuation.definition.section.subsection.end.service'
      '5':
        'name': 'entity.name.section.subsection.service'
    'end': '(?=\\[)'
    'name': 'meta.section.service'
    'patterns': [
      {
        'include': '#value_pair'
      }
      {
        'include': '#comment'
      }
    ]
  'string':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.service'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.service'
    'name': 'string.quoted.double.service'
    'patterns': [
      {
        'match': '\\\\[ntb"\\\\]'
        'name': 'constant.character.escape.service'
      }
      {
        'match': '\\\\.'
        'name': 'invalid.illegal.unknown-escape.service'
      }
    ]
  'value_pair':
    'begin': '([-\\w]+)\\s*(=)\\s*(?!$)'
    'captures':
      '1':
        'name': 'support.constant.service'
      '2':
        'name': 'punctuation.separator.key-value.service'
    'end': '$|(?=[#;])'
    'name': 'meta.value-pair.section-item.service'
    'patterns': [
      {
        'include': '#boolean'
      }
      {
        'include': '#string'
      }
      {
        'include': '#comment'
      }
    ]
